// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Globals
#include <Globals.h>
#endif
#ifndef INCLUDED_haxegon_Col
#include <haxegon/Col.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e641650405b6e704_31_S,"Globals","S",0xfa9cd9f5,"Globals.S","Globals.hx",31,0x4ea1ef2e)
HX_LOCAL_STACK_FRAME(_hx_pos_e641650405b6e704_6_boot,"Globals","boot",0xaa60dbd0,"Globals.boot","Globals.hx",6,0x4ea1ef2e)
HX_LOCAL_STACK_FRAME(_hx_pos_e641650405b6e704_16_boot,"Globals","boot",0xaa60dbd0,"Globals.boot","Globals.hx",16,0x4ea1ef2e)
HX_LOCAL_STACK_FRAME(_hx_pos_e641650405b6e704_26_boot,"Globals","boot",0xaa60dbd0,"Globals.boot","Globals.hx",26,0x4ea1ef2e)

void Globals_obj::__construct() { }

Dynamic Globals_obj::__CreateEmpty() { return new Globals_obj; }

void *Globals_obj::_hx_vtable = 0;

Dynamic Globals_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Globals_obj > _hx_result = new Globals_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Globals_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x393ec1ac;
}

 ::Dynamic Globals_obj::PAL;

 ::Dynamic Globals_obj::GUI;

 ::Dynamic Globals_obj::state;

::String Globals_obj::S(::String de,::String en){
            	HX_STACKFRAME(&_hx_pos_e641650405b6e704_31_S)
HXDLIN(  31)		if ((( (int)(::Globals_obj::state->__Field(HX_("language",58,80,11,7a),hx::paccDynamic)) ) == (int)0)) {
HXLINE(  32)			return de;
            		}
            		else {
HXLINE(  34)			return en;
            		}
HXLINE(  31)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Globals_obj,S,return )


Globals_obj::Globals_obj()
{
}

bool Globals_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"S") ) { outValue = S_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"PAL") ) { outValue = ( PAL ); return true; }
		if (HX_FIELD_EQ(inName,"GUI") ) { outValue = ( GUI ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { outValue = ( state ); return true; }
	}
	return false;
}

bool Globals_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"PAL") ) { PAL=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"GUI") ) { GUI=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { state=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Globals_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Globals_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &Globals_obj::PAL,HX_HCSTRING("PAL","\x3b","\xed","\x3c","\x00")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Globals_obj::GUI,HX_HCSTRING("GUI","\x5b","\x2a","\x36","\x00")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Globals_obj::state,HX_HCSTRING("state","\x11","\x76","\x0b","\x84")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Globals_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Globals_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Globals_obj::PAL,"PAL");
	HX_MARK_MEMBER_NAME(Globals_obj::GUI,"GUI");
	HX_MARK_MEMBER_NAME(Globals_obj::state,"state");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Globals_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Globals_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Globals_obj::PAL,"PAL");
	HX_VISIT_MEMBER_NAME(Globals_obj::GUI,"GUI");
	HX_VISIT_MEMBER_NAME(Globals_obj::state,"state");
};

#endif

hx::Class Globals_obj::__mClass;

static ::String Globals_obj_sStaticFields[] = {
	HX_HCSTRING("PAL","\x3b","\xed","\x3c","\x00"),
	HX_HCSTRING("GUI","\x5b","\x2a","\x36","\x00"),
	HX_HCSTRING("state","\x11","\x76","\x0b","\x84"),
	HX_HCSTRING("S","\x53","\x00","\x00","\x00"),
	::String(null())
};

void Globals_obj::__register()
{
	hx::Object *dummy = new Globals_obj;
	Globals_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Globals","\x90","\x2d","\x8a","\xe1");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Globals_obj::__GetStatic;
	__mClass->mSetStaticField = &Globals_obj::__SetStatic;
	__mClass->mMarkFunc = Globals_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Globals_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Globals_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Globals_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Globals_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Globals_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Globals_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_e641650405b6e704_6_boot)
HXDLIN(   6)		PAL =  ::Dynamic(hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("buttonTextCol",c1,9d,19,bd),::haxegon::Col_obj::WHITE)
            			->setFixed(1,HX_("buttonHighlightCol",7e,8b,62,ff),::haxegon::Col_obj::GRAY)
            			->setFixed(2,HX_("bg",c5,55,00,00),::haxegon::Col_obj::BLACK)
            			->setFixed(3,HX_("fg",41,59,00,00),::haxegon::Col_obj::WHITE)
            			->setFixed(4,HX_("buttonBorderCol",62,76,52,0a),::haxegon::Col_obj::WHITE)
            			->setFixed(5,HX_("buttonCol",6e,19,fb,4f),::haxegon::Col_obj::BLACK));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e641650405b6e704_16_boot)
HXDLIN(  16)		GUI =  ::Dynamic(hx::Anon_obj::Create(7)
            			->setFixed(0,HX_("buttonTextSize",20,54,df,c3),(int)140)
            			->setFixed(1,HX_("linethickness",00,3b,13,fc),(int)5)
            			->setFixed(2,HX_("buttonPaddingX",79,9d,c1,11),(int)40)
            			->setFixed(3,HX_("buttonPaddingY",7a,9d,c1,11),(int)5)
            			->setFixed(4,HX_("font",cf,5d,c0,43),HX_("GermaniaOne-Regular",b7,d2,08,63))
            			->setFixed(5,HX_("textsize",ee,c7,75,64),(int)40)
            			->setFixed(6,HX_("titleTextSize",c6,1d,2f,79),(int)415));
            	}
{
            	HX_STACKFRAME(&_hx_pos_e641650405b6e704_26_boot)
HXDLIN(  26)		state =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("language",58,80,11,7a),(int)0));
            	}
}

